from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
import os
from dotenv import load_dotenv
from mistralai.client import MistralClient

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN")
MISTRAL_API_KEY = os.getenv("MISTRAL_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask –∏ Mistral AI
app = Flask(__name__)
mistral_client = MistralClient(api_key=MISTRAL_API_KEY)

@app.route("/whatsapp", methods=['POST'])
def whatsapp_bot():
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è WhatsApp —á–µ—Ä–µ–∑ Twilio"""
    incoming_msg = request.values.get('Body', '').strip().lower()
    response = MessagingResponse()
    msg = response.message()

    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if "–±–∞–ª–∞–Ω—Å" in incoming_msg:
            bot_response = "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –≤–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞."
        elif "–∫—Ä–µ–¥–∏—Ç" in incoming_msg:
            bot_response = "–î–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—Ä–µ–¥–∏—Ç–∞—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ —Å–∞–π—Ç –±–∞–Ω–∫–∞."
        elif "–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞" in incoming_msg or "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É" in incoming_msg:
            bot_response = "–°—Ä–æ—á–Ω–æ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç—ã."
        else:
            # AI-–æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ Mistral
            ai_response = mistral_client.chat(
                model="mistral-tiny",
                messages=[{"role": "user", "content": incoming_msg}]
            )
            bot_response = ai_response.choices[0].message.content.strip()
        
        msg.body(bot_response)

    except Exception as e:
        msg.body("–û—à–∏–±–∫–∞! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. üò¢")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    return str(response)

if __name__ == "__main__":
    app.run(port=5000, debug=True)
